import{o,c as r,k as l,e,aa as a,q as m,s as b,B as s}from"./modules/vue-BMJ5w_no.js";import{I as c}from"./slidev/default-CW4P_asu.js";import{u as d,f as p}from"./slidev/context-Ct7Dnqc0.js";import"./index-CnpPBIZp.js";import"./modules/shiki-PHCoqP00.js";const f={__name:"slides.md__slidev_7",setup(u){const{$slidev:g,$nav:h,$clicksContext:n,$clicks:y,$page:w,$renderContext:v,$frontmatter:i}=d();return n.setup(),(x,t)=>(o(),r(c,m(b(s(p)(s(i),6))),{default:l(()=>t[0]||(t[0]=[e("h1",null,"WebAssembly",-1),e("blockquote",null,[e("p",null,"WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.")],-1),e("ul",null,[e("li",null,[e("strong",null,"Efficient and fast"),a(" The Wasm "),e("a",{href:"https://webassembly.org/docs/semantics/"},"stack machine"),a(" is designed to be encoded in a size- and load-time-efficient "),e("a",{href:"https://webassembly.org/docs/binary-encoding/"},"binary format"),a(". WebAssembly aims to execute at native speed by taking advantage of "),e("a",{href:"https://webassembly.org/docs/portability/#assumptions-for-efficient-execution"},"common hardware capabilities"),a(" available on a wide range of platforms.")]),e("li",null,[e("strong",null,"Safe"),a(" WebAssembly describes a memory-safe, sandboxed "),e("a",{href:"https://webassembly.org/docs/semantics/#linear-memory"},"execution environment"),a(" that may even be implemented inside existing JavaScript virtual machines. When "),e("a",{href:"https://webassembly.org/docs/web/"},"embedded in the web"),a(", WebAssembly will enforce the same-origin and permissions security policies of the browser.")]),e("li",null,[e("strong",null,"Open and debuggable"),a(" WebAssembly is designed to be pretty-printed in a "),e("a",{href:"https://webassembly.org/docs/text-format/"},"textual format"),a(" for debugging, testing, experimenting, optimizing, learning, teaching, and writing programs by hand.")]),e("li",null,[e("strong",null,"Part of the open web platform"),a(" WebAssembly is designed to maintain the versionless, feature-tested, and backwards-compatible "),e("a",{href:"https://webassembly.org/docs/web/"},"nature of the web"),a(". WebAssembly modules will be able to call into and out of the JavaScript context and access browser functionality through the same Web APIs accessible from JavaScript.")])],-1)])),_:1},16))}},P=f;export{P as default};
